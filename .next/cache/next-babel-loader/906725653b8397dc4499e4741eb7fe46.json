{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { StatisticsData } from \"./query/StatisticsData\";\nimport { ChartData } from \"./query/ChartData\";\nexport var GlobalState = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(startYear, endYear) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ChartData(startYear, endYear);\n\n          case 2:\n            _context.t0 = _context.sent;\n            _context.next = 5;\n            return StatisticsData(\"\".concat(startYear, \"-01-01\"), \"\".concat(endYear, \"-12-31\"));\n\n          case 5:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", {\n              chartData: _context.t0,\n              statistics: _context.t1\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function GlobalState(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n_c = GlobalState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalState\");","map":{"version":3,"sources":["D:/Novartis/with-typescript/src/pages/api/index.tsx"],"names":["StatisticsData","ChartData","GlobalState","startYear","endYear","chartData","statistics"],"mappings":";;AACA,SAAQA,cAAR,QAA6B,wBAA7B;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AAOA,OAAO,IAAMC,WAAW;AAAA,sEAAG,iBAAOC,SAAP,EAA0BC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLH,SAAS,CAACE,SAAD,EAAYC,OAAZ,CADJ;;AAAA;AAAA;AAAA;AAAA,mBAELJ,cAAc,WAAIG,SAAJ,uBAA0BC,OAA1B,YAFT;;AAAA;AAAA;AAAA;AACvBC,cAAAA,SADuB;AAEvBC,cAAAA,UAFuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXJ,WAAW;AAAA;AAAA;AAAA,GAAjB;KAAMA,W","sourcesContent":["import {Result, Statistic} from \"./domain/domain\";\r\nimport {StatisticsData} from \"./query/StatisticsData\";\r\nimport {ChartData} from \"./query/ChartData\";\r\n\r\nexport interface GlobalStateProps {\r\n    chartData : Result[]\r\n    statistics : Statistic\r\n}\r\n\r\nexport const GlobalState = async (startYear: string, endYear: string): Promise<GlobalStateProps> => ({\r\n    chartData : await ChartData(startYear, endYear),\r\n    statistics: await StatisticsData(`${startYear}-01-01`, `${endYear}-12-31`)\r\n})"]},"metadata":{},"sourceType":"module"}