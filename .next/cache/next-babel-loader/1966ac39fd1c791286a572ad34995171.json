{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { MyList, MyLayout, MySelectBox, MyChart, MyErrorPage } from \"../components\";\nimport { GlobalState } from \"./api\";\nimport { Container } from \"@material-ui/core\";\n\nvar IndexPage = function IndexPage(props) {\n  var getItems = function getItems() {\n    var year = new Date().getFullYear() - 1;\n    var items = [];\n\n    for (var i = 10; i >= 0; i--) {\n      items.push(\"\".concat(year - i));\n    }\n\n    return items;\n  };\n\n  var _useState = useState(props),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var onChangeDate = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(startDate, endDate) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(startDate, endDate);\n              _context.t0 = setState;\n              _context.next = 4;\n              return GlobalState(startDate, endDate);\n\n            case 4:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onChangeDate(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return state.statistics.sexDivision ? __jsx(MyLayout, {\n    title: \"Drug Adverse Events\"\n  }, __jsx(\"hr\", null), __jsx(Container, {\n    style: {\n      display: \"flex\"\n    }\n  }, __jsx(MyList, {\n    headers: [\"Indications\", \"Count\", \"Percentage(%)\"],\n    title: \"Drug indications\",\n    data: state.statistics.drugDivision\n  }), __jsx(Container, null, __jsx(MySelectBox, {\n    items: getItems(),\n    onYearChange: onChangeDate\n  }), __jsx(MyChart, {\n    data: state.chartData\n  }), __jsx(MyList, {\n    headers: [\"Gender\", \"Count\", \"Percentage(%)\"],\n    title: \"Gender percentage\",\n    data: state.statistics.sexDivision,\n    genderTable: true\n  })))) : __jsx(MyErrorPage, null);\n};\n\nIndexPage.getInitialProps = function () {\n  return GlobalState(\"2002\", \"2002\");\n};\n\nexport default IndexPage;","map":null,"metadata":{},"sourceType":"module"}