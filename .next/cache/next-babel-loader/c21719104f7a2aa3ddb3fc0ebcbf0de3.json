{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Data } from \"./Data\";\nexport var ChartData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(startYear, endYear) {\n    var getData, getMonth, result, i, _result, _i;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            getData = /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(startDate, endDate) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return Data(startDate, endDate).getTotalRecords.then(function (res) {\n                          return res;\n                        });\n\n                      case 2:\n                        return _context.abrupt(\"return\", _context.sent);\n\n                      case 3:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function getData(_x3, _x4) {\n                return _ref2.apply(this, arguments);\n              };\n            }();\n\n            getMonth = function getMonth(month) {\n              switch (month) {\n                case 1:\n                  return \"January\";\n\n                case 2:\n                  return \"February\";\n\n                case 3:\n                  return \"March\";\n\n                case 4:\n                  return \"April\";\n\n                case 5:\n                  return \"May\";\n\n                case 6:\n                  return \"June\";\n\n                case 7:\n                  return \"July\";\n\n                case 8:\n                  return \"August\";\n\n                case 9:\n                  return \"September\";\n\n                case 10:\n                  return \"October\";\n\n                case 11:\n                  return \"November\";\n\n                case 12:\n                  return \"December\";\n\n                default:\n                  return \"N/A\";\n              }\n            };\n\n            if (!(+endYear - +startYear === 0)) {\n              _context2.next = 31;\n              break;\n            }\n\n            result = [];\n            i = 1;\n\n          case 5:\n            if (!(i <= 12)) {\n              _context2.next = 28;\n              break;\n            }\n\n            if (!(i === 12)) {\n              _context2.next = 17;\n              break;\n            }\n\n            _context2.t0 = result;\n            _context2.t1 = getMonth(i);\n            _context2.next = 11;\n            return getData(\"\".concat(endYear, \"-\").concat(i, \"-01\"), \"\".concat(+endYear, \"-12-31\"));\n\n          case 11:\n            _context2.t2 = _context2.sent;\n            _context2.t3 = _context2.t2 + \"\";\n            _context2.t4 = {\n              term: _context2.t1,\n              count: _context2.t3\n            };\n\n            _context2.t0.push.call(_context2.t0, _context2.t4);\n\n            _context2.next = 25;\n            break;\n\n          case 17:\n            _context2.t5 = result;\n            _context2.t6 = getMonth(i);\n            _context2.next = 21;\n            return getData(\"\".concat(endYear, \"-\").concat(i, \"-01\"), \"\".concat(endYear, \"-\").concat(i + 1, \"-01\"));\n\n          case 21:\n            _context2.t7 = _context2.sent;\n            _context2.t8 = _context2.t7 + \"\";\n            _context2.t9 = {\n              term: _context2.t6,\n              count: _context2.t8\n            };\n\n            _context2.t5.push.call(_context2.t5, _context2.t9);\n\n          case 25:\n            i++;\n            _context2.next = 5;\n            break;\n\n          case 28:\n            return _context2.abrupt(\"return\", result);\n\n          case 31:\n            _result = [];\n            _i = +startYear;\n\n          case 33:\n            if (!(_i <= +endYear)) {\n              _context2.next = 45;\n              break;\n            }\n\n            _context2.t10 = _result;\n            _context2.t11 = \"\".concat(_i);\n            _context2.next = 38;\n            return getData(\"\".concat(_i, \"-01-01\"), \"\".concat(_i, \"-12-31\"));\n\n          case 38:\n            _context2.t12 = _context2.sent;\n            _context2.t13 = _context2.t12 + \"\";\n            _context2.t14 = {\n              term: _context2.t11,\n              count: _context2.t13\n            };\n\n            _context2.t10.push.call(_context2.t10, _context2.t14);\n\n          case 42:\n            _i++;\n            _context2.next = 33;\n            break;\n\n          case 45:\n            return _context2.abrupt(\"return\", _result);\n\n          case 46:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function ChartData(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}