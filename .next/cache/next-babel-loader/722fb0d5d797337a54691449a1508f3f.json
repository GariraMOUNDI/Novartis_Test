{"ast":null,"code":"var _jsxFileName = \"D:\\\\Novartis\\\\with-typescript\\\\src\\\\components\\\\My\\\\MySelectBox.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Container, InputLabel } from \"@material-ui/core\";\nimport { MySelect } from \"../index\";\nimport React, { useState } from \"react\";\nimport { MyCss } from \"../css\";\nexport const MySelectBox = ({\n  items,\n  onYearChange\n}) => {\n  const styles = MyCss.select();\n  const {\n    0: boxState,\n    1: setBoxState\n  } = useState({\n    error: false,\n    startYear: items[items.length - 1],\n    endYear: items[items.length - 1]\n  });\n\n  const modifyState = (selected, start) => {\n    setBoxState(prev => {\n      if (start) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          startYear: selected\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          endYear: selected\n        });\n      }\n    });\n  };\n\n  const onChange = (selected, start) => {\n    modifyState(selected, start);\n\n    if (boxState.startYear > boxState.endYear) {\n      setBoxState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        error: true\n      }));\n    } else {\n      setBoxState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        error: false\n      }));\n      onYearChange(boxState.startYear, boxState.endYear);\n    }\n  };\n\n  return __jsx(Container, {\n    style: {\n      display: \"flex\",\n      marginBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Error year\"), __jsx(InputLabel, {\n    className: styles.label,\n    style: {\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Fetch data from\"), __jsx(MySelect, {\n    id: \"start\",\n    value: boxState.startYear,\n    placeholder: \"year\",\n    items: items,\n    onHandleChange: selected => {\n      onChange(selected, true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), __jsx(InputLabel, {\n    className: styles.label,\n    style: {\n      width: \"80px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"to\"), __jsx(MySelect, {\n    id: \"end\",\n    value: boxState.endYear,\n    placeholder: \"year\",\n    items: items,\n    onHandleChange: selected => {\n      onChange(selected, false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["D:/Novartis/with-typescript/src/components/My/MySelectBox.tsx"],"names":["Container","InputLabel","MySelect","React","useState","MyCss","MySelectBox","items","onYearChange","styles","select","boxState","setBoxState","error","startYear","length","endYear","modifyState","selected","start","prev","onChange","display","marginBottom","label","marginRight","width"],"mappings":"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","sourcesContent":["import {Container, InputLabel} from \"@material-ui/core\";\r\nimport {MySelect} from \"../index\";\r\nimport React, {useState} from \"react\";\r\nimport {MyCss} from \"../css\";\r\n\r\ninterface MySelectBoxProps {\r\n    items : string[],\r\n    onYearChange : (startYear : string, endYear: string) => void\r\n}\r\n\r\ninterface BoxState {\r\n    error : boolean\r\n    startYear : string\r\n    endYear : string\r\n}\r\n\r\nexport const MySelectBox = ({ items, onYearChange} : MySelectBoxProps) => {\r\n    const styles = MyCss.select()\r\n    const [boxState, setBoxState] = useState<BoxState>({\r\n        error : false,\r\n        startYear : items[items.length-1],\r\n        endYear : items[items.length-1]\r\n    })\r\n\r\n    const modifyState = (selected : string , start : boolean) => {\r\n        setBoxState(prev => {\r\n            if (start) {\r\n                return {\r\n                    ...prev,\r\n                    startYear : selected\r\n                }\r\n            }else{\r\n                return {\r\n                    ...prev,\r\n                    endYear : selected\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const onChange = ( selected : string , start : boolean ) => {\r\n        modifyState(selected, start)\r\n        if (boxState.startYear > boxState.endYear){\r\n            setBoxState(prev => ({\r\n                ...prev,\r\n                error : true\r\n            }))\r\n        }else{\r\n            setBoxState(prev => ({\r\n                ...prev,\r\n                error : false\r\n            }))\r\n            onYearChange(boxState.startYear, boxState.endYear)\r\n        }\r\n    }\r\n    return (\r\n        <Container style = {{ display : \"flex\", marginBottom : \"10px\"}}>\r\n            <InputLabel>Error year</InputLabel>\r\n            <InputLabel className={styles.label} style={{marginRight: \"10px\"}} >\r\n                Fetch data from\r\n            </InputLabel>\r\n            <MySelect id={\"start\"} value={boxState.startYear} placeholder={\"year\"} items={items} onHandleChange={ selected => { onChange(selected, true)} }/>\r\n            <InputLabel className={styles.label} style={{ width: \"80px\"} } >\r\n                to\r\n            </InputLabel>\r\n            <MySelect id={\"end\"} value={boxState.endYear} placeholder={\"year\"} items={items} onHandleChange={selected => { onChange(selected, false)}}/>\r\n        </Container>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}