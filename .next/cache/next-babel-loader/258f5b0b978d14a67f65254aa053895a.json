{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Novartis\\\\with-typescript\\\\src\\\\components\\\\My\\\\MyList.tsx\";\n\nvar __jsx = React.createElement;\nimport { Container, InputLabel, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\nimport React from \"react\";\nimport { MyCss } from \"../css\";\nexport var MyList = function MyList(_ref) {\n  var headers = _ref.headers,\n      title = _ref.title,\n      data = _ref.data,\n      _ref$genderTable = _ref.genderTable,\n      genderTable = _ref$genderTable === void 0 ? false : _ref$genderTable;\n  var styles = MyCss.list();\n  return __jsx(Container, {\n    className: styles.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(InputLabel, {\n    className: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, title), __jsx(TableContainer, {\n    className: genderTable ? styles.table2 : styles.table1,\n    component: Paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    \"aria-label\": \"simple table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, __jsx(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, __jsx(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, headers.map(function (head) {\n    return __jsx(TableCell, {\n      key: head,\n      align: head === headers[0] ? \"left\" : \"right\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 45\n      }\n    }, head);\n  }))), __jsx(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, data === null || data === void 0 ? void 0 : data.map(function (indication) {\n    return __jsx(TableRow, {\n      key: indication.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 37\n      }\n    }, indication.name), __jsx(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }\n    }, indication.count), __jsx(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }\n    }, indication.percentage));\n  })))));\n};\n_c = MyList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyList\");","map":{"version":3,"sources":["D:/Novartis/with-typescript/src/components/My/MyList.tsx"],"names":["Container","InputLabel","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","React","MyCss","MyList","headers","title","data","genderTable","styles","list","root","label","table2","table1","map","head","fontWeight","indication","name","count","percentage"],"mappings":";;;;AACA,SACIA,SADJ,EAEIC,UAFJ,EAGIC,KAHJ,EAGWC,KAHX,EAIIC,SAJJ,EAKIC,SALJ,EAKeC,cALf,EAK+BC,SAL/B,EAK0CC,QAL1C,QAMO,mBANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,QAApB;AAQA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAmE;AAAA,MAAhEC,OAAgE,QAAhEA,OAAgE;AAAA,MAAvDC,KAAuD,QAAvDA,KAAuD;AAAA,MAAhDC,IAAgD,QAAhDA,IAAgD;AAAA,8BAA3CC,WAA2C;AAAA,MAA3CA,WAA2C,iCAA7B,KAA6B;AACrF,MAAMC,MAAM,GAAGN,KAAK,CAACO,IAAN,EAAf;AACA,SACI,MAAC,SAAD;AAAW,IAAA,SAAS,EAAKD,MAAM,CAACE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,SAAS,EAAKF,MAAM,CAACG,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMN,KADN,CADJ,EAII,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAGE,WAAW,GAAGC,MAAM,CAACI,MAAV,GAAmBJ,MAAM,CAACK,MAAjE;AAA0E,IAAA,SAAS,EAAEnB,KAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,kBAAW,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQU,OAAO,CAACU,GAAR,CAAY,UAAAC,IAAI,EAAI;AAChB,WAAQ,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,IAAhB;AAAsB,MAAA,KAAK,EAAGA,IAAI,KAAKX,OAAO,CAAC,CAAD,CAAhB,GAAsB,MAAtB,GAA+B,OAA7D;AAAuE,MAAA,KAAK,EAAE;AAAEY,QAAAA,UAAU,EAAG;AAAf,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuGD,IAAvG,CAAR;AACH,GAFD,CAFR,CADJ,CADJ,EAUI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQT,IAFR,aAEQA,IAFR,uBAEQA,IAAI,CAAEQ,GAAN,CAAY,UAAAG,UAAU;AAAA,WAClB,MAAC,QAAD;AAAU,MAAA,GAAG,EAAGA,UAAU,CAACC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD;AAAW,MAAA,SAAS,EAAC,IAArB;AAA0B,MAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,UAAU,CAACC,IADf,CADJ,EAII,MAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BD,UAAU,CAACE,KAArC,CAJJ,EAKI,MAAC,SAAD;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BF,UAAU,CAACG,UAArC,CALJ,CADkB;AAAA,GAAtB,CAFR,CAVJ,CADJ,CAJJ,CADJ;AAiCH,CAnCM;KAAMjB,M","sourcesContent":["import {Domain} from \"../../pages/api/domain/domain\";\r\nimport {\r\n    Container,\r\n    InputLabel,\r\n    Paper, Table,\r\n    TableBody,\r\n    TableCell, TableContainer, TableHead, TableRow\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {MyCss} from \"../css\";\r\n\r\ninterface MyDrugListProps {\r\n    title : string,\r\n    genderTable? : boolean\r\n    headers : string[]\r\n    data : Domain[]\r\n}\r\nexport const MyList = ({ headers, title, data,genderTable = false} : MyDrugListProps) => {\r\n    const styles = MyCss.list()\r\n    return (\r\n        <Container className = { styles.root }>\r\n            <InputLabel className = { styles.label } >\r\n                { title }\r\n            </InputLabel>\r\n            <TableContainer className={ genderTable ? styles.table2 : styles.table1 } component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead >\r\n                        <TableRow>\r\n                            {\r\n                                headers.map(head => {\r\n                                    return (<TableCell key={head} align={ head === headers[0] ? \"left\" : \"right\"}  style={{ fontWeight : \"bold\"}}>{head}</TableCell>)\r\n                                })\r\n                            }\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            data?.map ( indication => (\r\n                                <TableRow key= {indication.name}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                       {indication.name}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{indication.count}</TableCell>\r\n                                    <TableCell align=\"right\">{indication.percentage}</TableCell>\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Container>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}